(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{557:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pallet-development-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pallet-development-rules"}},[t._v("#")]),t._v(" Pallet Development Rules")]),t._v(" "),a("ul",[a("li",[t._v("add pallet development criteria here")])]),t._v(" "),a("h2",{attrs:{id:"logic-proofs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logic-proofs"}},[t._v("#")]),t._v(" Logic Proofs "),a("a",{attrs:{name:"qed"}})]),t._v(" "),a("p",[t._v("Because Substrate grants bare-metal control to developers, certain code patterns can expose panics\nat runtime. As mentioned in (2) of "),a("a",{attrs:{href:"#criteria"}},[t._v("Pallet Development Criteria")]),t._v(", panics can cause\nirreversible storage changes, possibly even bricking the blockchain and rendering it useless.")]),t._v(" "),a("p",[t._v("It is the responsibility of Substrate developers to ensure that the code doesn't panic after storage\nchanges. In many cases, safety might be independently verified by the developer while writing the\ncode. To facilitate auditability and better testing, Substrate developers should include a proof in\nan "),a("code",[t._v(".expect()")]),t._v(" call that shows why the code's logic is safe and will not panic. Convention dictates\nformatting the call like so")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method_call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<proof of safety>; qed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("You can find more examples of this pattern in the\n"),a("a",{attrs:{href:"https://github.com/paritytech/substrate/search?q=expect",target:"_blank",rel:"noopener noreferrer"}},[t._v("Substrate codebase"),a("OutboundLink")],1),t._v(". Indeed, including\nlogic proofs is very important for writing readable, well-maintained code. It comes as no surprise\nthat this pattern is also discussed in the\n"),a("a",{attrs:{href:"https://shawntabrizi.com/substrate-collectables-workshop/#/3/buying-a-kitty?id=remember-quotverify-first-write-lastquot",target:"_blank",rel:"noopener noreferrer"}},[t._v("Substrate collectables tutorial"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("blockquote",[a("p",[a("em",[t._v('QED stands for Quod Erat Demonstrandum which loosely translated means "that which was to be\ndemonstrated"')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);