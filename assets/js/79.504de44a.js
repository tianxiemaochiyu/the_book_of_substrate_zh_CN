(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{561:function(e,t,s){"use strict";s.r(t);var n=s(4),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"building-a-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-a-node"}},[e._v("#")]),e._v(" Building a Node")]),e._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),s("p",[e._v("Before we can even begin compiling our first blockchain node, we need to have a properly configured\nRust toolchain. There is a convenient script that will set up this toolchain for us, and we can run\nit with the following command.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Setup Rust and Substrate")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://getsubstrate.io -sSf "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" -s -- --fast\n")])])]),s("blockquote",[s("p",[e._v("This command downloads and executes code from the internet. Give yourself peace-of-mind by\ninspecting the "),s("a",{attrs:{href:"https://getsubstrate.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("script's source"),s("OutboundLink")],1),e._v(" to confirm it isn't doing anything\nnasty.")])]),e._v(" "),s("h3",{attrs:{id:"for-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-windows"}},[e._v("#")]),e._v(" For Windows")]),e._v(" "),s("p",[e._v("These instructions and the rest of the instructions in this chapter assume a unix-like environment\nsuch as Linux, MacOS, or Windows Subsystem for Linux (WSL). If you are a Windows user, WSL is the\nbest way to proceed. If you want or need to work in a native Windows environment, this is possible,\nbut is not covered in detail here. Please follow along with the\n"),s("a",{attrs:{href:"https://substrate.dev/docs/en/knowledgebase/getting-started/windows-users",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting Started on Windows"),s("OutboundLink")],1),e._v("\nguide, then return here when you're ready to proceed.")]),e._v(" "),s("h2",{attrs:{id:"compile-the-kitchen-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-the-kitchen-node"}},[e._v("#")]),e._v(" Compile the Kitchen Node")]),e._v(" "),s("p",[e._v("If you haven't already, "),s("code",[e._v("git clone")]),e._v(" the recipes repository. We also want to kick-start the node\ncompilation as it may take about 30 minutes to complete depending on your hardware.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Clone the Recipes Repository")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/substrate-developer-hub/recipes.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" recipes\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  Update Rust-Wasm toolchain")]),e._v("\n./nodes/scripts/init.sh\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Compile the Kitchen Node")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This step takes a while to complete")]),e._v("\ncargo build --release -p kitchen-node\n")])])]),s("p",[e._v("As you work through the recipes, refer back to these instructions each time you wish to re-compile\nthe node. Over time the commands will become familiar, and you will even modify them to compile\nother nodes.")]),e._v(" "),s("h2",{attrs:{id:"checking-your-work"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checking-your-work"}},[e._v("#")]),e._v(" Checking Your Work")]),e._v(" "),s("p",[e._v("Once the compilation is completed, you can ensure that the node has been built properly by\ndisplaying its help page. Notice that the node executable is found in the "),s("code",[e._v("target/release")]),e._v("\ndirectory. This is the default location for Rust projects.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Inside `recipes` directory")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Display the Kitchen Node's help page")]),e._v("\n./target/release/kitchen-node --help\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);