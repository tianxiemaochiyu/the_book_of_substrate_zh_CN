(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{584:function(t,s,e){"use strict";e.r(s);var n=e(4),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"kitchen-node-instant-seal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kitchen-node-instant-seal"}},[t._v("#")]),t._v(" Kitchen Node (Instant Seal)")]),t._v(" "),e("p",[e("code",[t._v("nodes/kitchen-node")]),t._v(" "),e("a",{attrs:{href:"https://playground-staging.substrate.dev/?deploy=recipes&files=%2Fhome%2Fsubstrate%2Fworkspace%2Fnodes%2Fkitchen-node%2Fsrc%2Flib.rs",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/badge/Playground-Try%20it!-brightgreen?logo=Parity%20Substrate",alt:"Try on playground"}}),t._v(" "),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/substrate-developer-hub/recipes/tree/master/nodes/kitchen-node/src/lib.rs",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/badge/Github-View%20Code-brightgreen?logo=github",alt:"View on GitHub"}}),t._v(" "),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("This recipe demonstrates a general purpose Substrate node that supports most of the recipes'\nruntimes, and uses\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_manual_seal/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Instant Seal consensus"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("The kitchen node serves as the first point of entry for most aspiring chefs when they first\nencounter the recipes. By default it builds with the super-runtime, but it can be used with most of\nthe runtimes in the recipes. Changing the runtime is described below. It features the instant seal\nconsensus which is perfect for testing and iterating on a runtime.")]),t._v(" "),e("h2",{attrs:{id:"installing-a-runtime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-a-runtime"}},[t._v("#")]),t._v(" Installing a Runtime")]),t._v(" "),e("h3",{attrs:{id:"cargo-dependency"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cargo-dependency"}},[t._v("#")]),t._v(" Cargo Dependency")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("Cargo.toml")]),t._v(" file specifies the runtime as a dependency. The file imports the super-runtime, and\nhas dependencies on other runtimes commented out.")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Common runtime configured with most Recipes pallets.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("runtime")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("package")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"super-runtime"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("path")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../../runtimes/super-runtime"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Runtime with custom weight and fee calculation.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# runtime = { package = "weight-fee-runtime", path = "../../runtimes/weight-fee-runtime"}')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Runtime with off-chain worker enabled.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To use this runtime, compile the node with `ocw` feature enabled,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   `cargo build --release --features ocw`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# runtime = { package = "ocw-runtime", path = "../../runtimes/ocw-runtime" }')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Runtime with custom runtime-api (custom API only used in rpc-node)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#runtime = { package = "api-runtime", path = "../../runtimes/api-runtime" }')]),t._v("\n")])])]),e("p",[t._v("Installing a different runtime in the node is just a matter of commenting out the super-runtime\nline, and enabling another one. Try the weight-fee runtime for example. Of course cargo will\ncomplain if you try to import two crates under the name "),e("code",[t._v("runtime")]),t._v(".")]),t._v(" "),e("p",[t._v("It is worth noting that this node does not work with "),e("em",[t._v("all")]),t._v(" of the recipes' runtimes. In particular,\nit is not compatible with the babe-grandpa runtime. That runtime uses the babe pallet which requires\na node that will include a special\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_runtime/enum.DigestItem.html#variant.PreRuntime",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("PreRuntime")]),t._v(" "),e("code",[t._v("DigestItem")]),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"building-a-service-with-the-runtime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#building-a-service-with-the-runtime"}},[t._v("#")]),t._v(" Building a Service with the Runtime")]),t._v(" "),e("p",[t._v("With a runtime of our choosing listed among our dependencies, we can provide the runtime to the\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_service/struct.ServiceBuilder.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("ServiceBuilder")]),e("OutboundLink")],1),t._v(". The\n"),e("code",[t._v("ServiceBuilder")]),t._v(" is responsible for assembling all of the necessary pieces that a node will need,\nand creating a "),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_service/struct.Service.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Substrate Service")]),e("OutboundLink")],1),t._v(" which\nwill manage the communication between them.")]),t._v(" "),e("p",[t._v("We begin by invoking the\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_executor/macro.native_executor_instance.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("native_executor_instance!")]),t._v(" macro"),e("OutboundLink")],1),t._v(".\nThis creates an executor which is responsible for executing transactions in the runtime and\ndetermining whether to run the native or Wasm version of the runtime.")]),t._v(" "),e("div",{staticClass:"language-rust_ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("native_executor_instance!(\n\tpub Executor,\n\truntime::api::dispatch,\n\truntime::native_version,\n);\n")])])]),e("p",[t._v("Finally, we create a new "),e("code",[t._v("ServiceBuilder")]),t._v(" for a full node. (The "),e("code",[t._v("$")]),t._v(" in the syntax is because we are\nin a "),e("a",{attrs:{href:"https://doc.rust-lang.org/book/ch19-06-macros.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("macro definition"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" builder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceBuilder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_full")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("runtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("opaque"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("runtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeApi")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("crate")]),e("span",{pre:!0,attrs:{class:"token module-declaration namespace"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executor")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --snip--")]),t._v("\n")])])]),e("h2",{attrs:{id:"instant-seal-consensus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instant-seal-consensus"}},[t._v("#")]),t._v(" Instant Seal Consensus")]),t._v(" "),e("p",[t._v("The instant seal consensus engine, and its cousin the manual seal consensus engine, are both\nincluded in the same\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_manual_seal/index.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("sc-consensus-manual-seal")]),t._v(" crate"),e("OutboundLink")],1),t._v(".\nThe recipes has a recipe dedicated to using "),e("RouterLink",{attrs:{to:"/zh/3-entrees/manual-seal.html"}},[t._v("manual seal")]),t._v(". Instant seal is a very\nconvenient tool for when you are developing or experimenting with a runtime. The consensus engine\nsimply authors a new block whenever a new transaction is available in the queue. This is similar to\n"),e("a",{attrs:{href:"https://www.trufflesuite.com/ganache",target:"_blank",rel:"noopener noreferrer"}},[t._v("Truffle Suite's Ganache"),e("OutboundLink")],1),t._v(" in the Ethereum ecosystem, but\nwithout the UI.")],1),t._v(" "),e("h3",{attrs:{id:"the-cargo-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-cargo-dependencies"}},[t._v("#")]),t._v(" The Cargo Dependencies")]),t._v(" "),e("p",[t._v("Installing the instant seal engine has three dependencies whereas the runtime had only one.")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("sc-consensus")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.8.0-rc4'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("sc-consensus-manual-seal")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.8.0-rc4'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("sp-consensus")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.8.0-rc4'")]),t._v("\n")])])]),e("h3",{attrs:{id:"the-proposer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-proposer"}},[t._v("#")]),t._v(" The Proposer")]),t._v(" "),e("p",[t._v("We begin by creating a\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_basic_authorship/struct.Proposer.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Proposer")]),e("OutboundLink")],1),t._v(" which will be\nresponsible for creating proposing blocks in the chain.")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proposer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_basic_authorship"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProposerFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tservice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tservice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_pool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"the-import-queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-import-queue"}},[t._v("#")]),t._v(" The Import Queue")]),t._v(" "),e("p",[t._v("Next we make a manual-seal import queue. This process is identical to creating the import queue used\nin the "),e("RouterLink",{attrs:{to:"/zh/3-entrees/manual-seal.html"}},[t._v("Manual Seal Node")]),t._v(". It is also similar to, but simpler than, the\n"),e("RouterLink",{attrs:{to:"/zh/3-entrees/basic-pow.html"}},[t._v("basic-pow")]),t._v(" import queue.")],1),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("with_import_queue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token closure-params"}},[e("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")]),t._v("_config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _select_chain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _transaction_pool"),e("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ok")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_manual_seal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import_queue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_client_db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Backend")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Box")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"the-authorship-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-authorship-task"}},[t._v("#")]),t._v(" The Authorship Task")]),t._v(" "),e("p",[t._v("As with every authoring engine, instant seal needs to be run as an "),e("code",[t._v("async")]),t._v(" authoring task.")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" authorship_future "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_manual_seal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("run_instant_seal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Box")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tproposer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tservice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tservice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_pool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tservice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("select_chain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok_or")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SelectChainRequired")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinherent_data_providers\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("With the future created, we can now kick it off using the service's\n"),e("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_service/struct.Service.html#method.spawn_essential_task",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("spawn_essential_task")]),t._v(" method"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_essential_task_handle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_blocking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"instant-seal"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" authorship_future"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"what-about-the-light-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-about-the-light-client"}},[t._v("#")]),t._v(" What about the Light Client?")]),t._v(" "),e("p",[t._v("The light client is not yet supported in this node, but it likely will be in the future (See\n"),e("a",{attrs:{href:"https://github.com/substrate-developer-hub/recipes/pull/238",target:"_blank",rel:"noopener noreferrer"}},[t._v("issue #238"),e("OutboundLink")],1),t._v(".) Because it will\ntypically be used for learning, experimenting, and testing in a single-node environment this\nrestriction should not cause many problems.. Instead we mark it as "),e("code",[t._v("unimplemented!")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Builds a new service for a light client.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("new_light")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceError")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("unimplemented!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No light client for manual seal"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This needs to be here or it won't compile.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[allow(unreachable_code)]")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_full")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);