(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{593:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"safe-math"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#safe-math"}},[t._v("#")]),t._v(" Safe Math")]),t._v(" "),a("p",[t._v("We can use the "),a("code",[t._v("checked")]),t._v(" traits in\n"),a("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_runtime/traits/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("substrate-primitives"),a("OutboundLink")],1),t._v(" to protect against\n"),a("a",{attrs:{href:"https://medium.com/@taabishm2/integer-overflow-underflow-and-floating-point-imprecision-6ba869a99033",target:"_blank",rel:"noopener noreferrer"}},[t._v("overflow/underflow"),a("OutboundLink")],1),t._v("\nwhen incrementing/decrementing objects in our runtime. To follow the\n"),a("a",{attrs:{href:"https://shawntabrizi.com/substrate-collectables-workshop/#/2/tracking-all-kitties?id=checking-for-overflowunderflow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Substrate collectable tutorial example"),a("OutboundLink")],1),t._v(",\nuse "),a("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_runtime/traits/trait.CheckedAdd.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("checked_add()")]),a("OutboundLink")],1),t._v(" to safely\nhandle the possibility of overflow when incremementing a global counter. "),a("em",[t._v("Note that this check is\nsimilar to "),a("a",{attrs:{href:"https://ethereumdev.io/safemath-protect-overflows/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("SafeMath")]),a("OutboundLink")],1),t._v(" in Solidity")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("runtime_primitives"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("traits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheckedAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" all_people_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("num_of_people")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" new_all_people_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" all_people_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checked_add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok_or")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Overflow adding a new person"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ok_or()")]),a("OutboundLink")],1),t._v(" transforms an\n"),a("code",[t._v("Option")]),t._v(" from "),a("code",[t._v("Some(value)")]),t._v(" to "),a("code",[t._v("Ok(value)")]),t._v(" or "),a("code",[t._v("None")]),t._v(" to "),a("code",[t._v("Err(error)")]),t._v(". The\n"),a("a",{attrs:{href:"https://doc.rust-lang.org/nightly/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("?")]),t._v(" operator"),a("OutboundLink")],1),t._v("\nfacilitates error propagation. In this case, using "),a("code",[t._v("ok_or()")]),t._v(" is the same as writing")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" new_all_people_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" all_people_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checked_add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("None")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Overflow adding a new person"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" todo")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("?")]),t._v(" for error propagation")]),t._v(" "),a("li",[t._v("Permill, Perbill, Fixed64 types for large arithmetic")]),t._v(" "),a("li",[a("code",[t._v("quantization")]),t._v(" benchmarks in the "),a("code",[t._v("treasury")]),t._v(" tests to verify that large arithmetic stays in a\ncomfortable error bound")]),t._v(" "),a("li",[t._v("ADD BACK IN NEW RECIPE: "),a("code",[t._v("collide")]),t._v(" and the question of whether maps prevent key collisions? could\ndiscuss "),a("code",[t._v("sort")]),t._v(", "),a("code",[t._v("sort_unstable")]),t._v(", and the ordering traits here...")])])])}),[],!1,null,null,null);e.default=n.exports}}]);