(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{506:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"babe-and-grandpa-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babe-and-grandpa-node"}},[t._v("#")]),t._v(" BABE and GRANDPA Node")]),t._v(" "),s("p",[s("code",[t._v("nodes/babe-grandpa-node")]),t._v(" "),s("a",{attrs:{href:"https://playground-staging.substrate.dev/?deploy=recipes&files=%2Fhome%2Fsubstrate%2Fworkspace%2Fnodes%2Fbabe-grandpa-node%2Fsrc%2Flib.rs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/badge/Playground-Try%20it!-brightgreen?logo=Parity%20Substrate",alt:"Try on playground"}}),t._v(" "),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/substrate-developer-hub/recipes/tree/master/modes/babe-grandpa-node/src/lib.rs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/badge/Github-View%20Code-brightgreen?logo=github",alt:"View on GitHub"}}),t._v(" "),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("babe-grandpa-node")]),t._v(" uses the "),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BABE"),s("OutboundLink")],1),t._v(" Proof\nof Authority consensus engine to determine who may author blocks, and the\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_finality_grandpa/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GRANDPA"),s("OutboundLink")],1),t._v(" finality gadget to provide\n"),s("a",{attrs:{href:"https://substrate.dev/docs/en/knowledgebase/advanced/consensus#finality",target:"_blank",rel:"noopener noreferrer"}},[t._v("deterministic finality"),s("OutboundLink")],1),t._v(" to past blocks.\nThis is the same design used in Polkadot. Understanding this recipe requires familiarity with\nSubstrate's "),s("a",{attrs:{href:"https://substrate.dev/docs/en/knowledgebase/advanced/block-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("block import pipeline"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("In this recipe we will learn about:")]),t._v(" "),s("ul",[s("li",[t._v("The "),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_finality_grandpa/trait.GrandpaApi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GrandpaAPI"),s("OutboundLink")],1),t._v(" runtime API")]),t._v(" "),s("li",[t._v("The "),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/trait.BabeApi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BabeApi"),s("OutboundLink")],1),t._v(" runtime API")]),t._v(" "),s("li",[t._v("The "),s("a",{attrs:{href:"https://substrate.dev/docs/en/knowledgebase/advanced/block-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("block import pipeline"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"the-block-import-pipeline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-block-import-pipeline"}},[t._v("#")]),t._v(" The Block Import Pipeline")]),t._v(" "),s("p",[t._v("The babe-grandpa node's block import pipeline will have three layers. The inner-most layer is the\nSubstrate "),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_service/client/struct.Client.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Client")]),s("OutboundLink")],1),t._v(", as always. We\nwill wrap the client with a\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_finality_grandpa/struct.GrandpaBlockImport.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GrandpaBlockImport")]),s("OutboundLink")],1),t._v(",\nand wrap that with a\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/struct.BabeBlockImport.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BabeBlockImport")]),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("We begin by creating the block import for GRANDPA. In addition to the block import itself, we get\nback a "),s("code",[t._v("grandpa_link")]),t._v(". This link is a channel over which the block import can communicate with the\nbackground task that actually casts GRANDPA votes. The\n"),s("a",{attrs:{href:"https://research.web3.foundation/en/latest/polkadot/GRANDPA.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("details of the GRANDPA protocol"),s("OutboundLink")],1),t._v("\nare beyond the scope of this recipe.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grandpa_block_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grandpa_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_finality_grandpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("sync"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" select_chain\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("In addition to actual blocks, this same block import will be used to import\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_runtime/type.Justification.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Justifications")]),s("OutboundLink")],1),t._v(", so we clone it\nright after constructing it.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" justification_import "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" grandpa_block_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("With the GRANDPA block import created, we can now create the BABE block import. The BABE block\nimport is the outer-most layer of the block import onion and it wraps the GRANDPA block import.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("babe_block_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" babe_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_or_compute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tgrandpa_block_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Again we are given back a BABE link which will be used to communicate with the import queue and\nbackground authoring worker.")]),t._v(" "),s("h2",{attrs:{id:"the-import-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-import-queue"}},[t._v("#")]),t._v(" The Import Queue")]),t._v(" "),s("p",[t._v("With the block import pipeline setup, we can proceed to creating the import queue which will feed\nblocks from the network into the import pipeline. We make it using BABE's "),s("code",[t._v("import_queue")]),t._v(" helper\nfunction. Notice that it requires the BABE link, and the entire block import pipeline which we refer\nto as "),s("code",[t._v("babe_block_import")]),t._v(" because BABE is the outermost layer.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" import_queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import_queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tbabe_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tbabe_block_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Box")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("justification_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"the-finality-proof-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-finality-proof-provider"}},[t._v("#")]),t._v(" The Finality Proof Provider")]),t._v(" "),s("p",[t._v("Occasionally in the operation of a blockchain, other nodes will contact our node asking for proof\nthat a particular block is finalized. To respond to these requests, we include a finality proof\nprovider.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("with_finality_proof_provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token closure-params"}},[s("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" backend"),s("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dyn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StorageAndProofProvider")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ok")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GrandpaFinalityProofProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("backend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n")])])]),s("h2",{attrs:{id:"spawning-the-babe-authorship-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spawning-the-babe-authorship-task"}},[t._v("#")]),t._v(" Spawning the BABE Authorship Task")]),t._v(" "),s("p",[t._v("Any node that is acting as an authority and participating in BABE consensus, must run an "),s("code",[t._v("async")]),t._v("\nauthorship task. We begin by creating an instance of\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/struct.BabeParams.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BabeParams")]),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" babe_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BabeParams")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tkeystore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keystore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tselect_chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" proposer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tblock_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsync_oracle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tforce_authoring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tbabe_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcan_author_with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("With the parameters established, we can now create and spawn the authorship future.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" babe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_consensus_babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start_babe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("babe_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nservice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_essential_task_handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_blocking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" babe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"spawning-the-grandpa-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spawning-the-grandpa-task"}},[t._v("#")]),t._v(" Spawning the GRANDPA Task")]),t._v(" "),s("p",[t._v("Just as we needed an "),s("code",[t._v("async")]),t._v(" worker to author blocks with BABE, we need an "),s("code",[t._v("async")]),t._v(" worker to listen\nto and cast GRANDPA votes. Again, we begin by creating an instance of\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_finality_grandpa/struct.GrandpaParams.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GrandpaParams")]),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" grandpa_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_finality_grandpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GrandpaParams")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grandpa_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tlink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grandpa_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tnetwork"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tinherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttelemetry_on_connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("telemetry_on_connect_stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tvoting_rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_finality_grandpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VotingRulesBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tprometheus_registry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prometheus_registry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("With the parameters established, we can now create and spawn the authorship future.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_essential_task_handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn_blocking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"grandpa-voter"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_finality_grandpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run_grandpa_voter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grandpa_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"disabled-grandpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disabled-grandpa"}},[t._v("#")]),t._v(" Disabled GRANDPA")]),t._v(" "),s("p",[t._v("Proof of Authority networks generally contain many full nodes that are not authorities. When GRANDPA\nis present in the network, we still need to tell the node how to interpret GRANDPA-related messages\nit may receive (just ignore them) and ensure that the correct inherents are still included in blocks\nin the case that the node "),s("em",[t._v("is")]),t._v(" an authority in BABE but not GRANDPA.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sc_finality_grandpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup_disabled_grandpa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tservice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inherent_data_providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tservice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"constraints-on-the-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constraints-on-the-runtime"}},[t._v("#")]),t._v(" Constraints on the Runtime")]),t._v(" "),s("h3",{attrs:{id:"runtime-apis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runtime-apis"}},[t._v("#")]),t._v(" Runtime APIs")]),t._v(" "),s("p",[t._v("Both BABE and GRANDPA rely on getting their authority sets from the runtime via the\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/trait.BabeApi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BabeAPI"),s("OutboundLink")],1),t._v(" and the\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sp_finality_grandpa/trait.GrandpaApi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GrandpaAPI"),s("OutboundLink")],1),t._v(". So trying to build\nthis node with a runtime that does not provide these APIs will fail to compile.")]),t._v(" "),s("h3",{attrs:{id:"pre-runtime-digests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pre-runtime-digests"}},[t._v("#")]),t._v(" Pre-Runtime Digests")]),t._v(" "),s("p",[t._v("Just as we cannot use this node with a runtime that does not provide the appropriate runtime APIs,\nwe also cannot use a runtime designed for this node with different consensus engines.")]),t._v(" "),s("p",[t._v("Because BABE is a slot-based consensus engine, it must inform the runtime which slot each block was\nintended for. To do this, it uses a technique known as a pre-runtime digest. It has two kinds,\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/struct.PrimaryPreDigest.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PrimaryPreDigest")]),s("OutboundLink")],1),t._v(" and\n"),s("a",{attrs:{href:"https://substrate.dev/rustdocs/v2.0.0-rc4/sc_consensus_babe/struct.SecondaryPlainPreDigest.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SecondaryPlainPreDigest")]),s("OutboundLink")],1),t._v(".\nThe BABE authorship task automatically inserts these digest items in each block it authors.")]),t._v(" "),s("p",[t._v("Because the runtime needs to interpret these pre-runtime digests, they are not optional. That means\nruntimes that expect the pre-digests cannot be used, unmodified, in nodes that don't provide the\npre-digests. Unlike other runtimes in the Recipes where runtimes can be freely swapped between\nnodes, the babe-grandpa-runtime can only be used in a node that is actually running BABE")])])}),[],!1,null,null,null);a.default=e.exports}}]);