(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{547:function(a,t,e){"use strict";e.r(t);var s=e(4),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"minimal-blockchain-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minimal-blockchain-configuration"}},[a._v("#")]),a._v(" Minimal Blockchain Configuration")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/paritytech/substrate/tree/master/bin/node",target:"_blank",rel:"noopener noreferrer"}},[a._v("Substate Node"),e("OutboundLink")],1),a._v(" is Substrate's pre-baked\nblockchain client. By creating and modifying a Substrate Node chain specification file, it is easy\nto configure a new chain and launch a corresponding testnet.")]),a._v(" "),e("p",[a._v("To use the default chain that comes pre-configured with Substrate Node, enter the following command:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("substrate build-spec --chain"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("staging "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" ~/chainspec.json\n")])])]),e("p",[a._v("Now, it is simple to modify "),e("code",[a._v("~/chainspec.json")]),a._v(" in your editor. There are a lot of individual fields\nfor each pallet, and one very large one which contains the WASM code blob for this chain. The most\nintuitive field to edit is the block "),e("code",[a._v("period")]),a._v(". Change it to 10 (seconds):")]),a._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[a._v("    "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v('"period"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),e("p",[a._v('With this new chainspec file, the "raw" chain definition can be built for the new chain')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("substrate build-spec --chain ~/chainspec.json --raw "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" ~/mychain.json\n")])])]),e("p",[a._v("To feed this into Substrate")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("substrate --chain ~/mychain.json\n")])])]),e("p",[a._v("Until a validator starts producing blocks, noting will happen. To start producing blocks, pass the\n"),e("code",[a._v("--validator")]),a._v(" option alongside the seed for the account(s) that are configured as initial\nauthorities.")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("substrate --chain ~/mychain.json --validator --key "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),e("p",[a._v("Now, distribute "),e("code",[a._v("mychain.json")]),a._v(" to the relevant authorities to synchronize and, depending on the list\nof authorities, validate the chain.")])])}),[],!1,null,null,null);t.default=n.exports}}]);