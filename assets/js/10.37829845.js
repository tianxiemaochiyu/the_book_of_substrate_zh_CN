(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{484:function(e,t,n){e.exports=n.p+"assets/img/apps-select-network.e9e5560d.png"},485:function(e,t,n){e.exports=n.p+"assets/img/apps-types.ef245f59.png"},498:function(e,t,n){"use strict";n.r(t);var o=n(4),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"interact-with-the-kitchen-node"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#interact-with-the-kitchen-node"}},[e._v("#")]),e._v(" Interact with the Kitchen Node")]),e._v(" "),o("p",[e._v("If you followed the instructions to "),o("RouterLink",{attrs:{to:"/1-prepare-kitchen/1-build-node.html"}},[e._v("build the node")]),e._v(", you my proceed to launch\nyour first blockchain.")],1),e._v(" "),o("h2",{attrs:{id:"launch-a-development-node"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#launch-a-development-node"}},[e._v("#")]),e._v(" Launch a Development Node")]),e._v(" "),o("p",[e._v("Before we launch our node we will purge any chain data. If you've followed the instructions exactly,\nyou will not yet have any chain data to purge, but on each subsequent run, you will, and it is best\nto get in the habit of purging your chain now. We will start our node in development mode ("),o("code",[e._v("--dev")]),e._v(").")]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[o("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Purge existing blockchain data (if any)")]),e._v("\n./target/release/kitchen-node purge-chain --dev\n\n"),o("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Start a fresh development blockchain")]),e._v("\n./target/release/kitchen-node --dev\n")])])]),o("p",[e._v("You should now see your node up and running and waiting for transactions. This Kitchen Node, and\nseveral other nodes included with the Recipes, is an instant seal node. That means it will not\ncreate any blocks until there are transactions to process. It also means that when a transaction is\nready, the node will instantly create a block. Instant seal nodes are ideal for experimenting with\nyour Substrate runtime. The output looks something like this.")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('2020-05-18 14:33:35 Running in --dev mode, RPC CORS has been disabled.\n2020-05-18 14:33:35 Kitchen Node\n2020-05-18 14:33:35 ✌️  version 2.0.0-alpha.7-6f91ef9-x86_64-linux-gnu\n2020-05-18 14:33:35 ❤️  by Joshy Orndorff:4meta5:Jimmy Chu, 2019-2020\n2020-05-18 14:33:35 📋 Chain specification: Development\n2020-05-18 14:33:35 🏷  Node name: confused-songs-1348\n2020-05-18 14:33:35 👤 Role: AUTHORITY\n2020-05-18 14:33:35 💾 Database: RocksDb at /home/joshy/.local/share/kitchen-node/chains/dev/db\n2020-05-18 14:33:35 ⛓  Native runtime: super-runtime-1 (super-runtime-1.tx1.au1)\n2020-05-18 14:33:35 🔨 Initializing Genesis block/state (state: 0x1835…9bd7, header-hash: 0x239e…48d8)\n2020-05-18 14:33:35 📦 Highest known block at #0\n2020-05-18 14:33:35 Using default protocol ID "sup" because none is configured in the chain specs\n2020-05-18 14:33:35 🏷  Local node identity is: QmQXnCTyCAfe3QAs43ggyJyWAJ1MoKzqizK991ZRTNQhxi\n2020-05-18 14:33:35 〽️ Prometheus server started at 127.0.0.1:9615\n2020-05-18 14:33:40 💤 Idle (0 peers), best: #0 (0x239e…48d8), finalized #0 (0x239e…48d8), ⬇ 0 ⬆ 0\n')])])]),o("h2",{attrs:{id:"launch-the-apps-user-interface"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#launch-the-apps-user-interface"}},[e._v("#")]),e._v(" Launch the Apps User Interface")]),e._v(" "),o("p",[e._v("You can navigate to the\n"),o("a",{attrs:{href:"https://polkadot.js.org/apps/#/settings/developer?rpc=ws://127.0.0.1:9944",target:"_blank",rel:"noopener noreferrer"}},[e._v("Polkadot-JS Apps"),o("OutboundLink")],1),e._v(' user\ninterface. This is a general purpose interface for interacting with many different Substrate-based\nblockchains including Polkadot. From now on we\'ll call it "Apps" for short. Before Apps will work\nwith our blockchain, we need to give it some chain-specific information known as the "types". You\'ll\nlearn what all this means as you work through the recipes; for now just follow the instructions.')]),e._v(" "),o("blockquote",[o("p",[e._v("If you are not clicking the link above but visiting Apps directly, by default Apps connects to the\nKusama network. You will need to switch to your locally running network, with only one node, by\nclicking on the network icon on Apps top left corner.")]),e._v(" "),o("p",[o("img",{attrs:{src:n(484),alt:"Screenshot: Switching Network"}})])]),e._v(" "),o("blockquote",[o("p",[e._v("Some browsers, notably Firefox, will not connect to a local node from an https website. An easy\nwork around is to try another browser, like Chromium. Another option is to\n"),o("a",{attrs:{href:"https://github.com/polkadot-js/apps#development",target:"_blank",rel:"noopener noreferrer"}},[e._v("host this interface locally"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("p",[e._v("If you're not already on the "),o("code",[e._v("Settings -> Developer")]),e._v("page, please navigate there. Copy the contents\nof "),o("code",[e._v("runtimes/super-runtime/types.json")]),e._v(" into Apps.")]),e._v(" "),o("p",[o("img",{attrs:{src:n(485),alt:"Screenshot: pasting types into Apps UI"}})]),e._v(" "),o("p",[e._v("The kitchen node uses the "),o("code",[e._v("super-runtime")]),e._v(" by default. As you work through the recipes, you'll learn\nthat it is easy to use other runtimes in this node, or use other nodes entirely. When you do use\nanother runtime, you need to insert the appropriate types from the\n"),o("code",[e._v("runtimes/<whatever runtime you're using>/types.json")]),e._v(" file. Every runtime that ships with the\nRecipes has this file.")]),e._v(" "),o("h2",{attrs:{id:"submitting-a-transaction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#submitting-a-transaction"}},[e._v("#")]),e._v(" Submitting a Transaction")]),e._v(" "),o("p",[e._v('You may now submit a simple token transfer transaction using the "Transfer" tab. When you do, you\nwill notice that your node instantly creates a block, and the transaction is processed. As you work\nthrough the recipes, you will use the '),o("strong",[e._v("Chain State")]),e._v(" tab to query the blockchain status and\n"),o("strong",[e._v("Extrinsics")]),e._v(" to send transactions to the blockchain. Play around for a bit before moving on.")])])}),[],!1,null,null,null);t.default=a.exports}}]);